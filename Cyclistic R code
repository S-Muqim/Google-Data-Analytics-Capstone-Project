#_____________________________________________Using R for analysis________________________________________

#installing packages
install.packages("tidyverse")

#loading libraries 
library(tidyverse) #calculations
library(lubridate) #dates 
library(hms) #time
library(data.table) #exporting data frame
library(dplyr)
library(plyr) #splitting, applying, combining data
library(ggplot2) #creating visualisations

#setting the working directory
setwd("~/R/Cyclistic Capstone Project")

#loading the full year of original .csv files from January 2023 to December 2023#

jan2023_data <- read.csv("202301-divvy-tripdata.csv")
feb2023_data <- read.csv("202302-divvy-tripdata.csv")
mar2023_data <- read.csv("202303-divvy-tripdata.csv")
apr2023_data <- read.csv("202304-divvy-tripdata.csv")
may2023_data <- read.csv("202305-divvy-tripdata.csv")
jun2023_data <- read.csv("202306-divvy-tripdata.csv")
jul2023_data <- read.csv("202307-divvy-tripdata.csv")
aug2023_data <- read.csv("202308-divvy-tripdata.csv")
sep2023_data <- read.csv("202309-divvy-tripdata.csv")
oct2023_data <- read.csv("202310-divvy-tripdata.csv")
nov2023_data <- read.csv("202311-divvy-tripdata.csv")
dec2023_data <- read.csv("202312-divvy-tripdata.csv")

#merging all files into one, to get a full year view
cyclistic_df <- rbind(jan2023_data, feb2023_data, mar2023_data, apr2023_data, may2023_data, jun2023_data, jul2023_data, aug2023_data, sep2023_data, oct2023_data, nov2023_data, dec2023_data)

#removing the data frames for each individual month in order to free up space in the environment
remove(jan2023_data, feb2023_data, mar2023_data, apr2023_data, may2023_data, jun2023_data, jul2023_data, aug2023_data, sep2023_data, oct2023_data, nov2023_data, dec2023_data)

#using lubridate to specify the date/time format of the started_at and ended_at columns
cyclistic_df2$started_at <- lubridate::ymd_hms(cyclistic_df2$started_at)
cyclistic_df2$ended_at <- lubridate::ymd_hms(cyclistic_df2$ended_at)

#adding column for Ride_Length by subtracting ended_at time from started_at time and converting it from seconds to minutes
cyclistic_df$ride_length <- difftime(cyclistic_df$ended_at, cyclistic_df$started_at, units = "mins")

#created a copy of the cyclistic data frame, in case a mistake is made
cyclistic_df2 <- cyclistic_df

#adding column for the day of the week
cyclistic_df2$day_of_week <- wday(cyclistic_df2$started_at)

#creating columns for: month, day, year, time, hour
cyclistic_df2$day_of_week <- wday(cyclistic_df2$started_at) #calculating the day of the week

cyclistic_df2$day_of_week <- format(as.Date(cyclistic_df2$date), "%A") #create column for day of week
cyclistic_df2$date <- as.Date(cyclistic_df2$started_at) #default format is yyyy-mm-dd, using start date
cyclistic_df2$month <- format(as.Date(cyclistic_df2$date), "%m") #creating column for month
cyclistic_df2$day <- format(as.Date(cyclistic_df2$date), "%d") #creating column for day
cyclistic_df2$year <- format(as.Date(cyclistic_df2$date), "%Y") #creating column for year
cyclistic_df2$time <- format(as.Date(cyclistic_df2$date), "%H:%M:%S") #format time as HH:MM:SS
cyclistic_df2$time <- as_hms((cyclistic_df2$started_at)) #creating new column for time
cyclistic_df2$hour <- hour(cyclistic_df2$time) #creating new column for hour

#for further analysis, creating columns for different seasons: Spring, Summer, Fall, Winter
            cyclistic_df2 <-cyclistic_df2 %>% mutate(season =
            case_when(month == "03" ~ "Spring",
            month == "04" ~ "Spring",
            month == "05" ~ "Spring",
            month == "06"  ~ "Summer",
            month == "07"  ~ "Summer",
            month == "08"  ~ "Summer",
            month == "09" ~ "Fall",
            month == "10" ~ "Fall",
            month == "11" ~ "Fall",
            month == "12" ~ "Winter",
            month == "01" ~ "Winter",
            month == "02" ~ "Winter")
            )


#creating column for different time_of_day: Night, Morning, Afternoon, Evening
            cyclistic_df2 <-cyclistic_df2 %>% mutate(time_of_day =
            case_when(hour == "0" ~ "Night",
            hour == "1" ~ "Night",
            hour == "2" ~ "Night",
            hour == "3" ~ "Night",
            hour == "4" ~ "Night",
            hour == "5" ~ "Night",
            hour == "6" ~ "Morning",
            hour == "7" ~ "Morning",
            hour == "8" ~ "Morning",
            hour == "9" ~ "Morning",
            hour == "10" ~ "Morning",
            hour == "11" ~ "Morning",
            hour == "12" ~ "Afternoon",
            hour == "13" ~ "Afternoon",
            hour == "14" ~ "Afternoon",
            hour == "15" ~ "Afternoon",
            hour == "16" ~ "Afternoon",
            hour == "17" ~ "Afternoon",
            hour == "18" ~ "Evening",
            hour == "19" ~ "Evening",
            hour == "20" ~ "Evening",
            hour == "21" ~ "Evening",
            hour == "22" ~ "Evening",
            hour == "23" ~ "Evening")
            )

#________________________________________________Cleaning the data___________________________________________________

cyclistic_df2 <- na.omit(cyclistic_df2) #removing rows with NA values
cyclistic_df2 <- distinct(cyclistic_df2) #removing duplicate rows
cyclistic_df2 <- cyclistic_df2[!(cyclistic_df2$ride_length <=1.9),] #deleting rides that lasted less than 2 minutes
cyclistic_df2 <- cyclistic_df2 %>% select(-c(ride_id, start_station_id, end_station_id,start_lat,start_lng,end_lat,end_lng)) #removing columns that aren't needed for analysis
cyclistic_df2$ride_length <- round(cyclistic_df2$ride_length, digits = 1) #rounding the ride length in minutes to 1 decimal place

#downloading the data as a .csv file
fwrite(cyclistic_df2,"cyclistic_df2.csv")

#viewing the final data
View(cyclistic_df2)

#________________________________________________ANALYSING THE DATA___________________________________________________

#-----------------Analysing total rides------------------

#total number of rides
nrow(cyclistic_df2)

#-------------Per user type---------------

#grouping user types
cyclistic_df2 %>% group_by(member_casual) %>% count(member_casual)

#-------------Per bike type---------------

#total rides by user type
cyclistic_df2 %>% group_by(member_casual, rideable_type) %>% count(rideable_type)

#total number of rides for each type of bike
cyclistic_df2 %>%
            group_by(rideable_type) %>%
            count(rideable_type)

#-------------Per bike hour of the day---------------

#number of rides by casual users and members
cyclistic_df2 %>%
            group_by(member_casual) %>%
            count(hour) %>%
            print(n=48)

#total number of rides per hour
cyclistic_df2 %>%
            count(hour) %>%
            head(n=24)

#-------------Per time of day---------------

#--------Morning----------

#total number of rides by members and casual users in the morning
cyclistic_df2 %>%
            group_by(member_casual) %>%
            filter(time_of_day == "Morning") %>%
            count(time_of_day)

#total number of rides in the morning
cyclistic_df2 %>%
            filter(time_of_day == "Morning") %>%
            count(time_of_day)

#--------Afternoon----------

#total number of rides by members and casual users in the afternoon
cyclistic_df2 %>%
            group_by(member_casual) %>%
            filter(time_of_day == "Afternoon") %>%
            count(time_of_day)

#total number of rides in the afternoon
cyclistic_df2 %>%
            filter(time_of_day == "Afternoon") %>%
            count(time_of_day)

#--------Evening----------

#total number of rides by members and casual users in the evening
cyclistic_df2 %>%
            group_by(member_casual) %>%
            filter(time_of_day == "Evening") %>%
            count(time_of_day)

#total number of rides in the evening
cyclistic_df2 %>%
            filter(time_of_day == "Evening") %>%
            count(time_of_day)

#--------Night----------

#total number of rides by members and casual users at night
cyclistic_df2 %>%
            group_by(member_casual) %>%
            filter(time_of_day == "Night") %>%
            count(time_of_day)

#total number of rides at night
cyclistic_df2 %>%
            filter(time_of_day == "Night") %>%
            count(time_of_day)

#--------All times of the day----------

#total number of rides by members and casual users at all times of the day
cyclistic_df2 %>%
            group_by(member_casual) %>%
            count(time_of_day)

#-------------Per day of the week---------------

#total number of rides by members and casual users each day of the week
cyclistic_df2 %>%
            group_by(member_casual) %>%
            count(day_of_week)

#total number of rides each day of the week
cyclistic_df2 %>%
            count(day_of_week)

#-------------Per day of the month---------------

#total number of rides by members and casual users each day of the month
cyclistic_df2 %>%
            group_by(member_casual) %>%
            count(day) %>%
            print(n = 62)

#total number of rides each day of the month
cyclistic_df2 %>%
            count(day) %>%
            head(n = 31)

#-------------Per month of the year---------------

#total number of rides by members and casual users each month of the year
cyclistic_df2 %>%
            group_by(member_casual) %>%
            count(month) %>%
            print(n = 24)

#total number of rides each month of the year
cyclistic_df2 %>%
            count(month)

#-------------Per season---------------

#--------Spring----------

#total number of rides by members and casual users in spring
cyclistic_df2 %>%
            group_by(member_casual) %>%
            filter(season == "Spring") %>%
            count(season)

#total number of rides in spring
cyclistic_df2 %>%
            filter(season == "Spring") %>%
            count(season)

#--------Summer----------

#total number of rides by members and casual users in the summer
cyclistic_df2 %>%
            group_by(member_casual) %>%
            filter(season == "Summer") %>%
            count(season)

#total number of rides in the summer
cyclistic_df2 %>%
            filter(season == "Summer") %>%
            count(season)

#--------Fall----------

#total number of rides by members and casual users in fall
cyclistic_df2 %>%
            group_by(member_casual) %>%
            filter(season == "Fall") %>%
            count(season)

#total number of rides in fall
cyclistic_df2 %>%
            filter(season == "Fall") %>%
            count(season)

#--------Winter----------

#total number of rides by members and casual users in winter
cyclistic_df2 %>%
            group_by(member_casual) %>%
            filter(season == "Winter") %>%
            count(season)

#total number of rides in winter
cyclistic_df2 %>%
            filter(season == "Winter") %>%
            count(season)

#number of rides per season by members and casual users
cyclistic_df2 %>%
            group_by(season, member_casual) %>%
            count(season)

#total number of rides each season
cyclistic_df2 %>%
            group_by(season) %>%
            count(season)

#-----------------Analysing average ride lengths------------------

#total average ride length
cyclistic_avgRide <- mean(cyclistic_df2 $ ride_length)
print(cyclistic_avgRide)

#-------------Per user type---------------

#average ride length for members and casual users
cyclistic_df2 %>%
            group_by(member_casual) %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#-------------Per bike type---------------

#average ride length for each type of bike by members and casual users
cyclistic_df2 %>%
            group_by(member_casual, rideable_type) %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#total average ride length for each type of bike
cyclistic_df2 %>%
            group_by(rideable_type) %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#-------------Per hour of the day---------------

#average ride length each hour of the day by members and casual users
cyclistic_df2 %>%
            group_by(hour, member_casual) %>%
            summarise_at(vars(ride_length),
            list(time = mean)) %>%
            print(n = 48)

#total average ride length each hour of the day
cyclistic_df2 %>%
            group_by(hour) %>%
            summarise_at(vars(ride_length),
            list(time = mean)) %>%
            print(n = 24)

#-------------Per time of the day---------------

#--------Morning----------

#average ride length of members and casual users in the morning
cyclistic_df2 %>%
            group_by(member_casual) %>%
            filter(time_of_day == "Morning") %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#total average ride length in the morning
cyclistic_df2 %>%
            filter(time_of_day == "Morning") %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#--------Afternoon----------

#average ride length of members and casual users in the afternoon
cyclistic_df2 %>%
            group_by(member_casual) %>%
            filter(time_of_day == "Afternoon") %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#total average ride length in the afternoon
cyclistic_df2 %>%
            filter(time_of_day == "Afternoon") %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#--------Evening----------

#average ride length of members and casual users in the evening
cyclistic_df2 %>%
            group_by(member_casual) %>%
            filter(time_of_day == "Evening") %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#total average ride length in the evening
cyclistic_df2 %>%
            filter(time_of_day == "Evening") %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#--------Night----------

#average ride length of members and casual users at night
cyclistic_df2 %>%
            group_by(member_casual) %>%
            filter(time_of_day == "Night") %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#total average ride length at night
cyclistic_df2 %>%
            filter(time_of_day == "Night") %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#total average ride length for each time of the day by members and casual users
cyclistic_df2 %>%
            group_by(time_of_day, member_casual) %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#total average ride length for each time of the day
cyclistic_df2 %>%
            group_by(time_of_day) %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#-------------per day of the week---------------

#average ride length of members and casual users each day of the week
cyclistic_df2 %>%
            group_by(member_casual, day_of_week) %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#total average ride length per day of the week
cyclistic_df2 %>%
            group_by(day_of_week) %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#-------------per day of the month---------------

#average ride length of members and casual users each day of the month
cyclistic_df2 %>%
            group_by(day, member_casual) %>%
            summarise_at(vars(ride_length),
            list(time = mean))
            print(n = 62)

#total average ride length per day of the month
cyclistic_df2 %>%
            group_by(day) %>%
            summarise_at(vars(ride_length),
            list(time = mean))
            print(n = 31)

#-------------per month of the year---------------

#average ride length of members and casual users each month of the year
            group_by(month, member_casual) %>%
            summarise_at(vars(ride_length),
            list(time = mean))
            print(n = 24)

#total average ride length per month of the year
cyclistic_df2 %>%
            group_by(month) %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#-------------per season---------------

#--------Spring----------

#average ride length of members and casual users in spring
cyclistic_df2 %>%
            group_by(member_casual) %>%
            filter(season == "Spring") %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#total average ride length in spring
cyclistic_df2 %>%
            filter(season == "Spring") %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#--------Summer----------

#average ride length of members and casual users during summer
cyclistic_df2 %>%
            group_by(member_casual) %>%
            filter(season == "Summer") %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#total average ride length during summer
cyclistic_df2 %>%
            filter(season == "Summer") %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#--------Fall----------

#average ride length of members and casual users during fall
cyclistic_df2 %>%
            group_by(member_casual) %>%
            filter(season == "Fall") %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#total average ride length in fall
cyclistic_df2 %>%
            filter(season == "Fall") %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#--------Winter----------

#average ride length of members and casual users during winter
cyclistic_df2 %>%
            group_by(member_casual) %>%
            filter(season == "Winter") %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#total average ride length during winter
cyclistic_df2 %>%
            filter(season == "Winter") %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#total average ride length of members and casual users during each season
cyclistic_df2 %>%
            group_by(season, member_casual) %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#total ride length per season
cyclistic_df2 %>%
            group_by(season) %>%
            summarise_at(vars(ride_length),
            list(time = mean))

#-----------------Analysing most popular start stations------------------

#most popular start station for casual users
cyclistic_df2 %>%
            group_by(member_casual, start_station_name) %>%
            dplyr::summarise(number_of_ride = n()) %>%
            filter(start_station_name != "", "casual" == member_casual) %>%
            arrange(-number_of_ride) %>%
            head(n = 30) %>%
            select(-member_casual)

#most popular start station for members
cyclistic_df2 %>%
            group_by(member_casual, start_station_name) %>%
            dplyr::summarise(number_of_ride = n()) %>%
            filter(start_station_name != "", "member" == member_casual) %>%
            arrange(-number_of_ride) %>%
            head(n = 30) %>%
            select(-member_casual)
